From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sat, 8 Jul 2023 16:34:51 +0200
Subject: [PATCH] Remove unused queue


diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 02538a214c843d4949267c9e0203d5e9c127dd3b..d53d489b4dcf92bc817e06e556af9165bb351bcc 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -54,7 +54,7 @@ public class Chunk {
     private int t;
     private long u;
     private int v;
-    private ConcurrentLinkedQueue<BlockPosition> w;
+    //private ConcurrentLinkedQueue<BlockPosition> w; // Unicorn - unused
     protected gnu.trove.map.hash.TObjectIntHashMap<Class> entityCount = new gnu.trove.map.hash.TObjectIntHashMap<Class>(); // Spigot
     // PaperSpigot start - Asynchronous light updates
     public AtomicInteger pendingLightUpdates = new AtomicInteger();
@@ -139,7 +139,7 @@ public class Chunk {
         this.g = new boolean[256];
         this.tileEntities = Maps.newHashMap();
         this.v = 4096;
-        this.w = Queues.newConcurrentLinkedQueue();
+        //this.w = Queues.newConcurrentLinkedQueue(); // Unicorn - unused
         this.entitySlices = (List[]) (new List[16]); // Spigot
         this.world = world;
         this.locX = i;
@@ -872,9 +872,11 @@ public class Chunk {
             if (chunk_enumtileentitystate == Chunk.EnumTileEntityState.IMMEDIATE) {
                 tileentity = this.i(blockposition);
                 this.world.setTileEntity(blockposition, tileentity);
-            } else if (chunk_enumtileentitystate == Chunk.EnumTileEntityState.QUEUED) {
+            // Unicorn start
+            } /*else if (chunk_enumtileentitystate == Chunk.EnumTileEntityState.QUEUED) {
                 this.w.add(blockposition);
-            }
+            }*/
+            // Unicorn end
         } else if (tileentity.x()) {
             this.tileEntities.remove(blockposition);
             return null;
@@ -1281,7 +1283,8 @@ public class Chunk {
             this.n();
         }
 
-        while (!this.w.isEmpty()) {
+        // Unicorn start
+        /*while (!this.w.isEmpty()) {
             BlockPosition blockposition = (BlockPosition) this.w.poll();
 
             if (this.a(blockposition, Chunk.EnumTileEntityState.CHECK) == null && this.getType(blockposition).isTileEntity()) {
@@ -1290,7 +1293,8 @@ public class Chunk {
                 this.world.setTileEntity(blockposition, tileentity);
                 this.world.b(blockposition, blockposition);
             }
-        }
+        }*/
+        // Unicorn end
 
     }
 
