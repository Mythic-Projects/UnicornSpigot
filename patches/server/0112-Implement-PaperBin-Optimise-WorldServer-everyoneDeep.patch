From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Thu, 4 Aug 2022 00:34:23 +0200
Subject: [PATCH] Implement [PaperBin-????] Optimise
 WorldServer#everyoneDeeplySleeping


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 2da9929320ffea51b3ec07512bf0cf69aecbcbb2..e8b1e6a7db76ae712dcd423c4f4abc81e83bffbf 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -280,6 +280,20 @@ public abstract class Entity implements ICommandListener {
         this.K();
     }
 
+    // Unicorn start
+    public boolean isInOverworld() {
+        return this.world.getWorld().getEnvironment() == org.bukkit.World.Environment.NORMAL;
+    }
+
+    public boolean isInNether() {
+        return this.world.getWorld().getEnvironment() == org.bukkit.World.Environment.NETHER;
+    }
+
+    public boolean isInEnd() {
+        return this.world.getWorld().getEnvironment() == org.bukkit.World.Environment.THE_END;
+    }
+    // Unicorn end
+
     /**
      * PaperSpigot - Checks if the feature is enabled and the entity is above the nether world bedrock height
      */
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index b9de83edd03603e9ac195df4de24c00d4448ab5f..fc44f312b1491bb416abd6a2aa18e8826d3dd3ca 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -28,6 +28,7 @@ import org.bukkit.craftbukkit.util.HashTreeSet;
 
 import org.bukkit.event.block.BlockFormEvent;
 import org.bukkit.event.weather.LightningStrikeEvent;
+import org.mythicprojects.unicornspigot.config.UnicornConfig;
 // CraftBukkit end
 
 public class WorldServer extends World implements IAsyncTaskHandler {
@@ -328,7 +329,24 @@ public class WorldServer extends World implements IAsyncTaskHandler {
     }
 
     public boolean everyoneDeeplySleeping() {
-        if (this.O && !this.isClientSide) {
+        // PaperBin start - WorldServer#everyoneDeeplySleeping optimization
+        if (this.players.isEmpty() || this.isClientSide || !this.O) {
+            return false;
+        }
+
+        boolean checkOtherDimensions = !UnicornConfig.get().settings.sleepingIgnoreOtherDimensions; // Unicorn
+        for (EntityHuman human : this.players) {
+            if (!human.isSpectator() && !human.isDeeplySleeping() && !human.fauxSleeping) {
+                // Unicorn start
+                if (checkOtherDimensions || human.isInOverworld()) {
+                    return false;
+                }
+                // Unicorn end
+            }
+        }
+
+        return true;
+        /*if (this.O && !this.isClientSide) {
             Iterator iterator = this.players.iterator();
 
             // CraftBukkit - This allows us to assume that some people are in bed but not really, allowing time to pass in spite of AFKers
@@ -353,7 +371,8 @@ public class WorldServer extends World implements IAsyncTaskHandler {
             return false;
         } else {
             return false;
-        }
+        }*/
+        // PaperBin end
     }
 
     protected void h() {
diff --git a/src/main/java/org/mythicprojects/unicornspigot/config/UnicornConfig.java b/src/main/java/org/mythicprojects/unicornspigot/config/UnicornConfig.java
index d4f82f6142f8ddbb1be61327c41d820ae4a4c858..93df9bc8d9519f36a5f6fe3df407000a8e4f21ff 100644
--- a/src/main/java/org/mythicprojects/unicornspigot/config/UnicornConfig.java
+++ b/src/main/java/org/mythicprojects/unicornspigot/config/UnicornConfig.java
@@ -32,6 +32,15 @@ public class UnicornConfig extends EngineConfig<UnicornWorldConfig> {
     @Exclude
     private static UnicornConfig INSTANCE;
 
+    public Settings settings = new Settings();
+
+    public static class Settings extends UnicornConfigSection {
+
+        @Comment("Whether checking if everyone is sleeping should ignore players in end/nether.")
+        public boolean sleepingIgnoreOtherDimensions = false;
+
+    }
+
     @Comment("Optimizations that could improve performance, but may cause some issues.")
     @Comment("Use with caution.")
     public Optimizations optimizations = new Optimizations();
