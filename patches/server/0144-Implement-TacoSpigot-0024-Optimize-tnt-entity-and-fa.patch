From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nirmal <upwardshybriding@gmail.com>
Date: Sat, 24 Jun 2023 19:07:41 +0200
Subject: [PATCH] Implement [TacoSpigot-0024] Optimize tnt entity and falling
 block movement by nirmal


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 39aa21c3fcee6346079b2fa3fb68491b3004db6f..b1f6416f7118aa65147781b25ce82ba85b2872d4 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -567,7 +567,15 @@ public abstract class Entity implements ICommandListener {
                 }
             }
 
-            List list = this.world.getCubes(this, this.getBoundingBox().a(d0, d1, d2));
+            // TacoSpigot start - do axis by axis scan if the entity is travelling a large area
+            AxisAlignedBB totalArea = this.getBoundingBox().a(d0, d1, d2);
+            double xLength = totalArea.d - totalArea.a;
+            double yLength = totalArea.e - totalArea.b;
+            double zLength = totalArea.f - totalArea.c;
+            boolean axisScan = this.world.tacoConfigUnicorn.tnt.optimizeMovement && xLength * yLength * zLength > 10;
+
+            List list = this.world.getCubes(this, axisScan ? this.getBoundingBox().a(0, d1, 0) : totalArea);
+            // TacoSpigot end
             AxisAlignedBB axisalignedbb = this.getBoundingBox();
 
             AxisAlignedBB axisalignedbb1;
@@ -579,6 +587,8 @@ public abstract class Entity implements ICommandListener {
             this.a(this.getBoundingBox().c(0.0D, d1, 0.0D));
             boolean flag1 = this.onGround || d7 != d1 && d7 < 0.0D;
 
+            if(axisScan) list = this.world.getCubes(this, this.getBoundingBox().a(d0, 0, 0)); // TacoSpigot - get x axis blocks
+
             AxisAlignedBB axisalignedbb2;
             Iterator iterator1;
 
@@ -588,6 +598,8 @@ public abstract class Entity implements ICommandListener {
 
             this.a(this.getBoundingBox().c(d0, 0.0D, 0.0D));
 
+            if(axisScan) list = this.world.getCubes(this, this.getBoundingBox().a(0, 0, d2)); // TacoSpigot - get z axis blocks
+
             for (iterator1 = list.iterator(); iterator1.hasNext(); d2 = axisalignedbb2.c(this.getBoundingBox(), d2)) {
                 axisalignedbb2 = (AxisAlignedBB) iterator1.next();
             }
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index c9d914b31e7f95d96eadaec9f8d66af9792a0a9b..d3deedb649978c5c6dcc8d73790a8b0e79f6a0ac 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -54,6 +54,9 @@ public class Explosion {
         int i;
         int j;
 
+        Block b = world.getChunkAt((int)posX >> 4, (int)posZ >> 4).getBlockData(new BlockPosition(posX, posY, posZ)).getBlock(); // TacoSpigot - get block of the explosion
+
+        if (!this.world.tacoConfigUnicorn.tnt.optimizeLiquidExplosions || !b.getMaterial().isLiquid()) { //TacoSpigot - skip calculating what blocks to blow up in water/lava
         for (int k = 0; k < 16; ++k) {
             for (i = 0; i < 16; ++i) {
                 for (j = 0; j < 16; ++j) {
@@ -93,6 +96,7 @@ public class Explosion {
                 }
             }
         }
+        } // TacoSpigot
 
         this.blocks.addAll(hashset);
         float f3 = this.size * 2.0F;
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index e773c8c7403c185396e3eaf9babdfa59ed820ad4..f668b5b3c191257bf93b9e445240647795675c27 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1462,6 +1462,9 @@ public abstract class World implements IBlockAccess {
         if (this.unicornConfig.optimizations.optimizeArmorStands && entity instanceof EntityArmorStand) return arraylist; // Unicorn
         if (entity instanceof EntityItem) return arraylist; // PaperSpigot - Optimize item movement
 
+        if (entity instanceof EntityTNTPrimed) return arraylist; // TacoSpigot - Optimize tnt entity movement
+        if (entity instanceof EntityFallingBlock) return arraylist; // TacoSpigot - Optimize falling block movement
+
         double d0 = 0.25D;
         List list = this.getEntities(entity, axisalignedbb.grow(d0, d0, d0));
 
diff --git a/src/main/java/org/mythicprojects/unicornspigot/config/TacoWorldConfig.java b/src/main/java/org/mythicprojects/unicornspigot/config/TacoWorldConfig.java
index 61d4ff62b87efdeb8feb019e53574f01bd6e345d..a92f2818799beff295e239d32cf452c97b9aeb5b 100644
--- a/src/main/java/org/mythicprojects/unicornspigot/config/TacoWorldConfig.java
+++ b/src/main/java/org/mythicprojects/unicornspigot/config/TacoWorldConfig.java
@@ -43,4 +43,17 @@ public final class TacoWorldConfig extends EngineConfig.WorldConfig {
 
     }
 
+    public Tnt tnt = new Tnt();
+
+    public static class Tnt extends UnicornConfigSection {
+
+        @Comment("Whether optimize movement if tnt are traveling on long distance.")
+        @Comment("This option may not reflect vanilla behavior.")
+        public boolean optimizeMovement = false;
+
+        @Comment("Whether to disable explosions processing if tnt is in water.")
+        public boolean optimizeLiquidExplosions = false;
+
+    }
+
 }
