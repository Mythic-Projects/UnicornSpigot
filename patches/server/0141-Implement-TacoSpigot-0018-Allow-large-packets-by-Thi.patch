From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Thinkofdeath <thinkofdeath@spigotmc.org>
Date: Sat, 24 Jun 2023 18:50:21 +0200
Subject: [PATCH] Implement [TacoSpigot-0018] Allow large packets by
 Thinkofdeath


diff --git a/src/main/java/net/minecraft/server/PacketDataSerializer.java b/src/main/java/net/minecraft/server/PacketDataSerializer.java
index d95033bfdc00aa0c68772f9ad4d8f5005aabce96..8cc4f533eb5a0f72e0929f5c8b6bf5b7c85aeaf7 100644
--- a/src/main/java/net/minecraft/server/PacketDataSerializer.java
+++ b/src/main/java/net/minecraft/server/PacketDataSerializer.java
@@ -28,8 +28,14 @@ public class PacketDataSerializer extends ByteBuf {
 
     private final ByteBuf a;
 
+    // TacoSpigot start - Allow large packets
+    private static final int DEFAULT_LIMIT = Short.MAX_VALUE;
+    private static final int LARGE_PACKET_LIMIT = Short.MAX_VALUE * 1024;
+    private final boolean allowLargePackets;
     public PacketDataSerializer(ByteBuf bytebuf) {
         this.a = bytebuf;
+        this.allowLargePackets = org.mythicprojects.unicornspigot.util.CompatHacks.hasProtocolSupport();
+    // TacoSpigot end
     }
 
     public static int a(int i) {
@@ -49,7 +55,7 @@ public class PacketDataSerializer extends ByteBuf {
 
     // Paper start
     public byte[] a() {
-        return readByteArray(Short.MAX_VALUE);
+        return readByteArray(this.allowLargePackets ? LARGE_PACKET_LIMIT : DEFAULT_LIMIT); // TacoSpigot - Allow large packets
     }
 
     public byte[]readByteArray(int limit) {
diff --git a/src/main/java/org/mythicprojects/unicornspigot/util/CompatHacks.java b/src/main/java/org/mythicprojects/unicornspigot/util/CompatHacks.java
new file mode 100644
index 0000000000000000000000000000000000000000..c1d84e6ae266068efe69de44660a124d79429592
--- /dev/null
+++ b/src/main/java/org/mythicprojects/unicornspigot/util/CompatHacks.java
@@ -0,0 +1,12 @@
+package org.mythicprojects.unicornspigot.util;
+
+import org.bukkit.Bukkit;
+
+public class CompatHacks {
+    private CompatHacks() {
+    }
+
+    public static boolean hasProtocolSupport() {
+        return Bukkit.getPluginManager().isPluginEnabled("ProtocolSupport");
+    }
+}
\ No newline at end of file
