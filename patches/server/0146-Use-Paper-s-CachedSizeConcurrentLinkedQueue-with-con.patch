From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sat, 24 Jun 2023 19:43:31 +0200
Subject: [PATCH] Use Paper's CachedSizeConcurrentLinkedQueue with constant
 size()


diff --git a/src/main/java/com/destroystokyo/paper/util/CachedSizeConcurrentLinkedQueue.java b/src/main/java/com/destroystokyo/paper/util/CachedSizeConcurrentLinkedQueue.java
new file mode 100644
index 0000000000000000000000000000000000000000..aa0b37d3830610d73d4713357ac99717d2654a46
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/util/CachedSizeConcurrentLinkedQueue.java
@@ -0,0 +1,34 @@
+package com.destroystokyo.paper.util;
+
+import java.util.concurrent.ConcurrentLinkedQueue;
+import java.util.concurrent.atomic.LongAdder;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public class CachedSizeConcurrentLinkedQueue<E> extends ConcurrentLinkedQueue<E> {
+    private final LongAdder cachedSize = new LongAdder();
+
+    @Override
+    public boolean add(@NotNull E e) {
+        boolean result = super.add(e);
+        if (result) {
+            this.cachedSize.increment();
+        }
+        return result;
+    }
+
+    @Nullable
+    @Override
+    public E poll() {
+        E result = super.poll();
+        if (result != null) {
+            this.cachedSize.decrement();
+        }
+        return result;
+    }
+
+    @Override
+    public int size() {
+        return this.cachedSize.intValue();
+    }
+}
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index c5f4a11f1bf8ca9fa222462cf90f4f7348b0280d..98c1e544c71309c5532a631ecfad8acb36e03a80 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -100,7 +100,7 @@ public abstract class MinecraftServer extends org.mythicprojects.unicornspigot.t
     private long X = 0L;
     private final GameProfileRepository Y;
     private final UserCache Z;
-    protected final Queue<FutureTask<?>> j = new java.util.concurrent.ConcurrentLinkedQueue<FutureTask<?>>(); // Spigot, PAIL: Rename
+    protected final Queue<FutureTask<?>> j = new com.destroystokyo.paper.util.CachedSizeConcurrentLinkedQueue<>(); // Spigot, PAIL: Rename // Paper - Make size() constant-time
     private Thread serverThread;
     private long ab = az();
 
