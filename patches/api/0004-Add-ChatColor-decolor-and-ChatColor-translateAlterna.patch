From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sat, 17 Jun 2023 22:22:32 +0200
Subject: [PATCH] Add ChatColor#decolor and
 ChatColor#translateAlternateColorCodes with default alternate color char


diff --git a/src/main/java/org/bukkit/ChatColor.java b/src/main/java/org/bukkit/ChatColor.java
index adbae51a70f883269be2fba50ab3f28be7928958..1569dd6c1cb75d84e91c0df419cb68c76dc4afb2 100644
--- a/src/main/java/org/bukkit/ChatColor.java
+++ b/src/main/java/org/bukkit/ChatColor.java
@@ -6,6 +6,9 @@ import java.util.regex.Pattern;
 import org.apache.commons.lang.Validate;
 
 import com.google.common.collect.Maps;
+import org.jetbrains.annotations.Contract;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
 
 /**
  * All supported color values for chat
@@ -215,7 +218,9 @@ public enum ChatColor{
      * you need to dynamically convert colour codes from your custom format.
      */
     public static final char COLOR_CHAR = '\u00A7';
-    private static final Pattern STRIP_COLOR_PATTERN = Pattern.compile("(?i)" + String.valueOf(COLOR_CHAR) + "[0-9A-FK-OR]");
+    public static final char ALT_COLOR_CHAR = '&'; // Unicorn
+    private static final Pattern STRIP_COLOR_PATTERN = Pattern.compile("(?i)" + COLOR_CHAR + "[0-9A-FK-OR]");
+    private static final Pattern DECOLOR_PATTERN = Pattern.compile("(?i)" + COLOR_CHAR + "([0-9A-FK-OR])"); // Unicorn
 
     private final int intCode;
     private final char code;
@@ -310,6 +315,34 @@ public enum ChatColor{
         return STRIP_COLOR_PATTERN.matcher(input).replaceAll("");
     }
 
+    // Unicorn start
+    /**
+     * Replace ยง in input with alternate color code character
+     *
+     * @param input String to replace
+     * @param altColorChar Alternate color code character to replace with
+     * @return String with replaced color code character
+     */
+    @Contract("_, null -> null")
+    public static String decolor(char altColorChar, @Nullable String input) {
+        if (input == null) {
+            return null;
+        }
+
+        return DECOLOR_PATTERN.matcher(input).replaceAll(Character.toString(altColorChar) + "$1");
+    }
+
+    /**
+     * Replace ยง in input with {@literal &}
+     * @param input String to replace
+     * @return String with replaced color code character
+     */
+    @Contract("null -> null")
+    public static String decolor(@Nullable String input) {
+        return decolor(ALT_COLOR_CHAR, input);
+    }
+    // Unicorn end
+
     /**
      * Translates a string using an alternate color code character into a
      * string that uses the internal ChatColor.COLOR_CODE color code
@@ -320,7 +353,7 @@ public enum ChatColor{
      * @param textToTranslate Text containing the alternate color code character.
      * @return Text containing the ChatColor.COLOR_CODE color code character.
      */
-    public static String translateAlternateColorCodes(char altColorChar, String textToTranslate) {
+    public static @NotNull String translateAlternateColorCodes(char altColorChar, @NotNull String textToTranslate) { // Unicorn
         char[] b = textToTranslate.toCharArray();
         for (int i = 0; i < b.length - 1; i++) {
             if (b[i] == altColorChar && "0123456789AaBbCcDdEeFfKkLlMmNnOoRr".indexOf(b[i+1]) > -1) {
@@ -331,6 +364,21 @@ public enum ChatColor{
         return new String(b);
     }
 
+    // Unicorn start
+    /**
+     * Translates a string using an {@literal &} into a
+     * string that uses the internal ChatColor.COLOR_CODE color code
+     * character. The alternate color code character will only be replaced if
+     * it is immediately followed by 0-9, A-F, a-f, K-O, k-o, R or r.
+     *
+     * @param textToTranslate Text containing the alternate color code character.
+     * @return Text containing the ChatColor.COLOR_CODE color code character.
+     */
+    public static @NotNull String translateAlternateColorCodes(@NotNull String textToTranslate) {
+        return translateAlternateColorCodes(ALT_COLOR_CHAR, textToTranslate);
+    }
+    // Unicorn end
+
     /**
      * Gets the ChatColors used at the end of the given input string.
      *
